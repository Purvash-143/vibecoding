apiVersion: apps/v1
kind: Deployment
metadata:
  name: insurance-app-deployment
  namespace: insurance-application
  labels:
    app: insurance-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: insurance-app
  template:
    metadata:
      labels:
        app: insurance-app
    spec:
      initContainers:
      - name: migration
        image: your-registry/insurance-app:latest  # Replace with your image
        command: ["/bin/sh"]
        args: 
          - -c
          - |
            echo "Running database migrations..."
            npx prisma db push --accept-data-loss
            echo "Migrations completed"
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: insurance-app-secrets
              key: DATABASE_URL
        envFrom:
        - configMapRef:
            name: insurance-app-config
      containers:
      - name: insurance-app
        image: your-registry/insurance-app:latest  # Replace with your image
        ports:
        - containerPort: 3000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: insurance-app-secrets
              key: DATABASE_URL
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: insurance-app-secrets
              key: NEXTAUTH_SECRET
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: insurance-app-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: insurance-app-secrets
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_SESSION_TOKEN
          valueFrom:
            secretKeyRef:
              name: insurance-app-secrets
              key: AWS_SESSION_TOKEN
        envFrom:
        - configMapRef:
            name: insurance-app-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: insurance-app-service
  namespace: insurance-application
  labels:
    app: insurance-app
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  selector:
    app: insurance-app
